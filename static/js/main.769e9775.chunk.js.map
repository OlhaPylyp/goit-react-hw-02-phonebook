{"version":3,"sources":["Components/PhoneBook/FormPhonebook.module.css","Components/Filter/Filter.module.css","Components/Section.module.css","Components/ContactItem/ContactItem.module.css","Components/PhoneBook/FormPhonebook.jsx","Components/ContactItem/ContactItem.jsx","Components/Filter/Filter.jsx","Components/Section.jsx","App.js","index.js"],"names":["module","exports","FormPhonebook","state","name","number","nameId","shortid","generate","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","console","log","className","styles","form_container","form","this","label","for","input","type","pattern","title","required","onChange","id","span","btn","Component","ContactItem","onDeleteContact","contacts","contact_list","map","contact_item","contact_item_name","contact_item_tel","contact_btn","onClick","Filter","container","Section","children","defaultProps","App","filter","addContact","contact","preState","filterChange","deleteContact","prevState","normalizedFilter","toLowerCase","filterNamePhoneBook","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.769e9775.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_container\":\"FormPhonebook_form_container__2SIAv\",\"form\":\"FormPhonebook_form__1Ymy9\",\"input\":\"FormPhonebook_input__1sYT4\",\"label\":\"FormPhonebook_label__1u8Ju\",\"btn\":\"FormPhonebook_btn__3ZYRt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__35AN_\",\"input\":\"Filter_input__3G_Z_\",\"label\":\"Filter_label__MVfUS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__vRgjm\",\"container\":\"Section_container__3UuuH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"ContactItem_contact_list__24OKn\",\"contact_item_name\":\"ContactItem_contact_item_name__1EOAX\",\"contact_item_tel\":\"ContactItem_contact_item_tel__1kLow\",\"contact_btn\":\"ContactItem_contact_btn__1U-Nh\"};","import shortid from \"shortid\";\r\nimport { Component } from \"react\";\r\nimport styles from \"./FormPhonebook.module.css\"\r\nclass FormPhonebook extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  nameId = shortid.generate();\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.setState({ name: \"\", number: \"\" });\r\n    console.log(this.props)\r\n    // const sameName=this.state.contacts.sort((item) => item.name === name);\r\n    // // console.log(\"this.state.contacts\",sameName)\r\n    // console.log(\"this.state.contacts\",this.state.name)\r\n    // if (sameName) {\r\n    //   window.alert(`LocalHost:3000 says ${name} is already in contact`);\r\n    //   return;\r\n  };\r\n \r\n  render() {\r\n    return (\r\n    <div className={styles.form_container}>\r\n      <form className={styles.form} onSubmit={this.handleSubmit}  >\r\n        <label className={styles.label} for={this.nameId}>\r\n     Name\r\n        <input\r\n        className={styles.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={this.state.name}\r\n          onChange={this.handleChange}\r\n          id={this.nameId}\r\n        /></label>\r\n         <label className={styles.label}>\r\n         <span  className={styles.span}>Tel</span> \r\n        <input\r\n        className={styles.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n          required\r\n          value={this.state.number}\r\n          onChange={this.handleChange}\r\n        /></label>\r\n        <button type=\"submit\" className={styles.btn}>Add contact</button>\r\n      </form></div>\r\n    );\r\n  }\r\n}\r\nexport default FormPhonebook;\r\n","import styles from \"./ContactItem.module.css\"\r\n\r\nconst ContactItem = ({ onDeleteContact, contacts }) => (\r\n  <div>\r\n    {\" \"}\r\n    <ul className={styles.contact_list} >\r\n      {contacts.map(({ name, id, number }) => {\r\n        return (\r\n          <li className={styles.contact_item} key={id}>\r\n            {\" \"}\r\n            <span className={styles.contact_item_name}>{name}:</span>\r\n            <span className={styles.contact_item_tel}>{number}</span>{\" \"} \r\n            <button type=\"submit\" className={styles.contact_btn} onClick={() => onDeleteContact(id)}>Delete</button>\r\n          </li>\r\n        );\r\n      })}\r\n     \r\n    </ul>{\" \"}\r\n  </div>\r\n);\r\nexport default ContactItem;\r\n","import styles from \"./Filter.module.css\"\r\n\r\nconst Filter = ({ value, onChange }) =>  (\r\n<div className={styles.container}><label className={styles.label}>\r\n        Find contact by name\r\n    <input className={styles.input} type=\"text\" value={value} onChange={onChange }/>\r\n      {\" \"}\r\n\r\n  </label></div>)\r\n\r\nexport default Filter;\r\n","import PropTypes from 'prop-types';\r\nimport styles from '../Components/Section.module.css';\r\nconst Section = ({ title, children }) => (\r\n  <section className={styles.container}>\r\n    <h2 className={styles.title}>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\nSection.defaultProps = {\r\n  title: '',\r\n};\r\nSection.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default Section;\r\n","import { Component } from \"react\";\nimport \"./App.css\";\nimport shortid from \"shortid\";\nimport FormPhonebook from \"./Components/PhoneBook\";\nimport ContactItem from \"./Components/ContactItem\";\nimport Filter from \"./Components/Filter\";\nimport Section from \"./Components/Section\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      //       { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      // { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      // { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      // { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  //   saveContact=()=>{ const contacts = JSON.parse(localStorage.getItem(\"contacts\"))\n  //   this.setState(contacts)}\n  // saveContact({ localStorage.setItem(\"contacts\",JSON.stringify(contacts))\n  //   setState(contacts)})\n\n  addContact = ({ name, number }) => {\n    let contact = {\n      name,\n      number: number,\n      id: shortid.generate(),\n    };\n\n    this.setState((preState) => {\n      return {\n        contacts: [contact, ...preState.contacts],\n      };\n    });\n    // const sameName=this.state.contacts.sort((item) => item.name === name);\n    // // console.log(\"this.state.contacts\",sameName)\n    // console.log(\"this.state.contacts\",this.state.name)\n    // if (sameName) {\n    //   window.alert(`LocalHost:3000 says ${name} is already in contact`);\n    //   return;\n    // }\n  };\n\n  filterChange = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n  deleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { name, filter } = this.state;\n    const normalizedFilter = this.state.filter.toLowerCase();\n    const filterNamePhoneBook = this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n\n    return (\n      <div>\n        <Section title=\"Phonebook\">\n          <FormPhonebook value={name} onSubmit={this.addContact} />\n        </Section>\n        <Section title=\"Contacts list\">\n          <Filter value={filter} onChange={this.filterChange} />\n          <ContactItem\n            onDeleteContact={this.deleteContact}\n            contacts={filterNamePhoneBook}\n          />{\" \"}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}