{"version":3,"sources":["Components/PhoneBook/FormPhonebook.jsx","Components/ContactItem/ContactItem.jsx","Components/Filter/Filter.jsx","App.js","index.js"],"names":["FormPhonebook","state","name","number","nameId","shortid","generate","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","this","type","pattern","title","required","onChange","Component","ContactItem","onDeleteContact","contacts","map","id","onClick","Filter","App","filter","addContact","console","log","contact","preState","filterChange","deleteContact","prevState","normalizedFilter","toLowerCase","filterNamePhoneBook","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTA6CeA,E,4MA1CbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAEVC,OAASC,IAAQC,W,EAEjBC,aAAe,SAACC,GAAO,IAAD,EACIA,EAAEC,cAAlBP,EADY,EACZA,KAAMQ,EADM,EACNA,MACd,EAAKC,SAAL,eAAiBT,EAAOQ,K,EAE1BE,aAAe,SAACJ,GACdA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKd,OACzB,EAAKU,SAAS,CAAET,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,OACE,uBAAMY,SAAUC,KAAKJ,aAArB,UACE,uBACEK,KAAK,OACLf,KAAK,OACLgB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRV,MAAOM,KAAKf,MAAMC,KAClBmB,SAAUL,KAAKT,eAEjB,uBACEU,KAAK,MACLf,KAAK,SACLgB,QAAQ,+FACRC,MAAM,mlBACNC,UAAQ,EACRV,MAAOM,KAAKf,MAAME,OAClBkB,SAAUL,KAAKT,eAEjB,wBAAQU,KAAK,SAAb,gC,GAtCoBK,aCgBbC,EAlBK,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,SAApB,OAClB,gCACG,IACD,6BACGA,EAASC,KAAI,YAA2B,IAAxBxB,EAAuB,EAAvBA,KAAMyB,EAAiB,EAAjBA,GAAIxB,EAAa,EAAbA,OACzB,OACE,+BACG,IACD,iCAAOD,EAAP,OACA,+BAAOC,IAAe,IACtB,wBAAQc,KAAK,SAAUW,QAAS,kBAAMJ,EAAgBG,IAAtD,sBAJOA,QAST,QCRKE,EAPA,SAAC,GAAD,IAAGnB,EAAH,EAAGA,MAAOW,EAAV,EAAUA,SAAV,OAA2B,yDAEtC,uBAAOJ,KAAK,OAAOP,MAAOA,EAAOW,SAAUA,IACxC,QCkDQS,E,4MA7Cb7B,MAAQ,CACNwB,SAAU,GACVM,OAAQ,I,EAEVC,WAAa,YAAuB,IAApB9B,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACpB8B,QAAQC,IAAI,EAAKjC,OACjB,IAAIkC,EAAU,CACZjC,OACAC,OAAQA,EACRwB,GAAItB,IAAQC,YAEd,EAAKK,UAAS,SAACyB,GACb,MAAO,CACLX,SAAS,CAAEU,GAAH,mBAAeC,EAASX,gB,EAItCY,aAAe,SAAC7B,GACd,EAAKG,SAAS,CAAEoB,OAAQvB,EAAEC,cAAcC,S,EAE1C4B,cAAc,SAACX,GACbM,QAAQC,IAAI,KAAMP,GAClB,EAAKhB,UAAS,SAAA4B,GAAS,MAAK,CAC1Bd,SAAUc,EAAUd,SAASM,QAAO,SAAAI,GAAO,OAAIA,EAAQR,KAAOA,U,4CAGlE,WAAU,IAAD,EACkBX,KAAKf,MAAtBC,EADD,EACCA,KAAM6B,EADP,EACOA,OACRS,EAAmBxB,KAAKf,MAAM8B,OAAOU,cACrCC,EAAsB1B,KAAKf,MAAMwB,SAASM,QAAO,SAACI,GAAD,OACrDA,EAAQjC,KAAKuC,cAAcE,SAASH,MAGtC,OACE,gCACE,2CACA,cAAC,EAAD,CAAe9B,MAAOR,EAAMa,SAAUC,KAAKgB,aAC3C,0CACA,cAAC,EAAD,CAAQtB,MAAOqB,EAAQV,SAAUL,KAAKqB,eACtC,cAAC,EAAD,CAAcb,gBAAiBR,KAAKsB,cAAgBb,SAAUiB,W,GAxCpDpB,a,MCClBsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ba7c9537.chunk.js","sourcesContent":["import shortid from \"shortid\";\r\nimport { Component } from \"react\";\r\nclass FormPhonebook extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  nameId = shortid.generate();\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={this.state.name}\r\n          onChange={this.handleChange}\r\n        />\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n          required\r\n          value={this.state.number}\r\n          onChange={this.handleChange}\r\n        />\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default FormPhonebook;\r\n","const ContactItem = ({ onDeleteContact, contacts }) => (\r\n  <div>\r\n    {\" \"}\r\n    <ul>\r\n      {contacts.map(({ name, id, number }) => {\r\n        return (\r\n          <li key={id}>\r\n            {\" \"}\r\n            <span>{name}:</span>\r\n            <span>{number}</span>{\" \"} \r\n            <button type=\"submit\"  onClick={() => onDeleteContact(id)}>Delete</button>\r\n          </li>\r\n        );\r\n      })}\r\n     \r\n    </ul>{\" \"}\r\n  </div>\r\n);\r\nexport default ContactItem;\r\n","const Filter = ({ value, onChange }) =>  (<label>\r\n        Find contact by name\r\n    <input type=\"text\" value={value} onChange={onChange }/>\r\n      {\" \"}\r\n\r\n  </label>)\r\n\r\nexport default Filter;\r\n","import { Component } from \"react\";\nimport \"./App.css\";\nimport shortid from \"shortid\";\nimport FormPhonebook from \"./Components/PhoneBook\";\nimport ContactItem from \"./Components/ContactItem\";\nimport Filter from \"./Components/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n  addContact = ({ name, number }) => {\n    console.log(this.state);\n    let contact = {\n      name,\n      number: number,\n      id: shortid.generate(),\n    };\n    this.setState((preState) => {\n      return {\n        contacts: [contact, ...preState.contacts],\n      };\n    });\n  };\n  filterChange = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n  deleteContact=(id)=>{\n    console.log(\"id\", id)\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  }\n  render() {\n    const { name, filter } = this.state;\n    const normalizedFilter = this.state.filter.toLowerCase();\n    const filterNamePhoneBook = this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <FormPhonebook value={name} onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.filterChange} />\n        <ContactItem  onDeleteContact={this.deleteContact}  contacts={filterNamePhoneBook} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}